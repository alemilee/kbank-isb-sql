{
  "name": "kbank-isb-sql",
  "displayName": "kbank_isb_sql",
  "description": "",
  "version": "0.0.1",
  "private": true,
  "license": "MIT",
  "engines": {
    "vscode": "^1.75.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onLanguage:json",
    "onLanguage:jsonc",
    "onCommand:kbank-isb-sql.helloWorld",
    "onCommand:getting-started-sample.runCommand",
    "onCommand:getting-started-sample.changeSetting",
    "onCommand:getting-started-sample.setContext",
    "onCommand:getting-started-sample.sayHello",
    "onCommand:getting-started-sample.viewSources",
    "onCommand:samples.quickInput"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "walkthroughs": [
      {
        "id": "sample",
        "title": "Sample",
        "description": "A sample walkthrough",
        "steps": [
          {
            "id": "runcommand",
            "title": "Run Command",
            "description": "This step will run a command and check off once it has been run.\n[Run Command](command:getting-started-sample.runCommand)",
            "media": {
              "image": "resources/media/image.png",
              "altText": "Empty image"
            },
            "completionEvents": [
              "onCommand:getting-started-sample.runCommand"
            ]
          },
          {
            "id": "changesetting",
            "title": "Change Setting",
            "description": "This step will change a setting and check off when the setting has changed\n[Change Setting](command:getting-started-sample.changeSetting)",
            "media": {
              "image": "resources/media/image.png",
              "altText": "Empty image"
            },
            "completionEvents": [
              "onSettingChanged:getting-started-sample.sampleSetting"
            ]
          },
          {
            "id": "setcontext",
            "title": "Set Context",
            "description": "This step will set a context key, and check off when that context has been set\n[Set Context](command:getting-started-sample.setContext)",
            "media": {
              "image": "resources/media/image.png",
              "altText": "Empty image"
            },
            "completionEvents": [
              "onContext:gettingStartedContextKey"
            ]
          },
          {
            "id": "install python extension",
            "title": "Install Python Extension",
            "description": "Click here to install the Python Extension. This step will complete once it has been installed.\n[Here](command:workbench.extensions.installExtension?%22ms-python.python%22)",
            "media": {
              "image": "resources/media/image.png",
              "altText": "Empty image"
            },
            "completionEvents": [
              "extensionInstalled:ms-python.python"
            ]
          },
          {
            "id": "open terminal view",
            "title": "Open Terminal",
            "description": "Click [here](command:workbench.action.terminal.toggleTerminal) to open terminal. This step will complete once the terminal has been opened.",
            "media": {
              "image": "resources/media/image.png",
              "altText": "Empty image"
            },
            "completionEvents": [
              "onView:terminal"
            ]
          },
          {
            "id": "usesvg",
            "title": "Use SVG's",
            "description": "Try out using SVG's in your content, they can react to the theme (try: ``var(--vscode-foreground)``) and even host command links (try: ``xlink:href=\"command:``)",
            "media": {
              "svg": "resources/media/image.svg",
              "altText": "Empty svg image"
            }
          },
          {
            "id": "mac",
            "title": "UI Platform: Mac",
            "description": "This step will only show on a Mac.",
            "when": "isMac",
            "media": {
              "markdown": "resources/media/mac.md"
            }
          },
          {
            "id": "windows",
            "title": "UI Platform: Windows",
            "description": "This step will only show on Windows",
            "when": "isWindows",
            "media": {
              "markdown": "resources/media/windows.md"
            }
          },
          {
            "id": "linux",
            "title": "UI Platform: Linux",
            "description": "This step will only show on Linux",
            "when": "isLinux",
            "media": {
              "markdown": "resources/media/linux.md"
            }
          },
          {
            "id": "macRemote",
            "title": "Workspace Platform: Mac",
            "description": "This step will only show on Mac remotes.",
            "when": "workspacePlatform == 'mac'",
            "media": {
              "markdown": "resources/media/mac.md"
            }
          },
          {
            "id": "windowsRemote",
            "title": "Workspace Platform: Windows",
            "description": "This step will only show on Windows remotes",
            "when": "workspacePlatform == 'windows'",
            "media": {
              "markdown": "resources/media/windows.md"
            }
          },
          {
            "id": "linuxRemote",
            "title": "Workspace Platform: Linux",
            "description": "This step will only show on Linux remotes",
            "when": "workspacePlatform == 'linux'",
            "media": {
              "markdown": "resources/media/linux.md"
            }
          },
          {
            "id": "webRemote",
            "title": "Workspace Platform: Web",
            "description": "This step will only show on webworker remotes",
            "when": "workspacePlatform == 'webworker'",
            "media": {
              "markdown": "resources/media/linux.md"
            }
          },
          {
            "id": "showSources",
            "title": "View Sources",
            "description": "Open a folder containg the sources of this extension.\n[View Sources](command:getting-started-sample.viewSources)",
            "media": {
              "image": "resources/media/image.png",
              "altText": "Empty image"
            }
          }
        ]
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "package-explorer",
          "title": "Package Explorer",
          "icon": "resources/media/dep.svg"
        }
      ]
    },
    "views": {
      "package-explorer": [
        {
          "type": "webview",
          "id": "sqlconfigExplorer",
          "name": "Sql Config Explorer"
        },
        {
          "type": "tree",
          "id": "sqlmapExplorer",
          "name": "Sql Namespace Explorer"
        }
      ],
      "explorer": [
        {
          "id": "testView",
          "name": "Test View"
        },
        {
          "id": "testViewDragAndDrop",
          "name": "Test View Drag and Drop"
        }
      ]
    },
    "commands": [
      {
        "command": "samples.quickInput",
        "title": "Quick Input Samples"
      },
      {
        "command": "kbank-isb-sql.helloWorld",
        "title": "Hello World"
      },
      {
        "title": "Getting Started Sample: Say Hello",
        "shortTitle": "Say Hello (This is the name used in the New File quick pick)",
        "command": "getting-started-sample.sayHello"
      },
      {
        "command": "sqlmapExplorer.refreshEntry",
        "title": "Refresh",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      },
      {
        "command": "sqlmapExplorer.addEntry",
        "title": "Add Namespace",
        "icon": {
          "light": "resources/light/plus.svg",
          "dark": "resources/dark/plus.svg"
        }
      },
      {
        "command": "sqlmapExplorer.delEntry",
        "title": "Delete Namespace",
        "icon": {
          "light": "resources/light/minus.svg",
          "dark": "resources/dark/minus.svg"
        }
      },
      {
        "command": "sqlmapExplorer.editEntry",
        "title": "Edit",
        "icon": {
          "light": "resources/light/edit.svg",
          "dark": "resources/dark/edit.svg"
        }
      },
      {
        "command": "sqlmapExplorer.deleteEntry",
        "title": "Delete"
      },
      {
        "command": "ftpExplorer.refresh",
        "title": "Refresh",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      },
      {
        "command": "ftpExplorer.openFtpResource",
        "title": "Open FTP Resource"
      },
      {
        "command": "ftpExplorer.revealResource",
        "title": "Reveal in FTP View"
      },
      {
        "command": "jsonOutline.refresh",
        "title": "Refresh",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      },
      {
        "command": "jsonOutline.refreshNode",
        "title": "Refresh",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      },
      {
        "command": "jsonOutline.renameNode",
        "title": "Rename"
      },
      {
        "command": "fileExplorer.refreshFile",
        "title": "Refresh",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      },
      {
        "command": "fileExplorer.openFile",
        "title": "Open File"
      },
      {
        "command": "testView.reveal",
        "title": "Test View: Reveal"
      },
      {
        "command": "testView.changeTitle",
        "title": "Test View: Change Title"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "ftpExplorer.revealResource"
        }
      ],
      "file/newFile": [
        {
          "command": "getting-started-sample.sayHello"
        }
      ],
      "view/title": [
        {
          "command": "sqlmapExplorer.refreshEntry",
          "when": "view == sqlmapExplorer",
          "group": "navigation"
        },
        {
          "command": "jsonOutline.renameNode",
          "when": "view == jsonOutline"
        },
        {
          "command": "sqlmapExplorer.addEntry",
          "when": "view == sqlmapExplorer",
          "group": "navigation"
        },
        {
          "command": "sqlmapExplorer.delEntry",
          "when": "view == sqlmapExplorer",
          "group": "navigation"
        },
        {
          "command": "jsonOutline.refresh",
          "when": "view == jsonOutline",
          "group": "navigation"
        },
        {
          "command": "ftpExplorer.refresh",
          "when": "view == ftpExplorer",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "sqlmapExplorer.editEntry",
          "when": "view == sqlmapExplorer && viewItem == dependency",
          "group": "inline"
        },
        {
          "command": "sqlmapExplorer.deleteEntry",
          "when": "view == sqlmapExplorer && viewItem == dependency"
        },
        {
          "command": "jsonOutline.renameNode",
          "when": "view == jsonOutline"
        },
        {
          "command": "jsonOutline.refreshNode",
          "when": "view == jsonOutline",
          "group": "inline"
        },
        {
          "command": "fileExplorer.refreshFile",
          "when": "view == fileExplorer && viewItem == file",
          "group": "inline"
        }
      ]
    },
    "configuration": [
      {
        "title": "kbank vscode tools",
        "properties": {
          "jsonOutline.autorefresh": {
            "type": "boolean",
            "default": false
          },
          "getting-started-sample.sampleSetting": {
            "description": "Sample setting",
            "type": "boolean"
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "node ./esbuild.js",
    "package": "NODE_ENV=production node ./esbuild.js",
    "watch": "node ./esbuild.js --watch",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/ftp": "^0.3.33",
    "@types/glob": "^8.0.1",
    "@types/mkdirp": "^0.5.2",
    "@types/mocha": "^10.0.1",
    "@types/node": "^16.18.12",
    "@types/rimraf": "^2.0.2",
    "@types/vscode": "^1.75.1",
    "@typescript-eslint/eslint-plugin": "^5.49.0",
    "@typescript-eslint/parser": "^5.49.0",
    "@vscode/test-electron": "^2.2.2",
    "esbuild": "^0.16.17",
    "eslint": "^8.33.0",
    "glob": "^8.1.0",
    "mocha": "^10.1.0",
    "typescript": "^4.9.4",
    "webpack-cli": "^5.0.1"
  },
  "dependencies": {
    "@vscode/webview-ui-toolkit": "^1.2.1",
    "ftp": "^0.3.10",
    "jsonc-parser": "^0.4.2",
    "minimist": "^1.2.6",
    "mkdirp": "^0.5.1",
    "rimraf": "^2.6.2"
  }
}
